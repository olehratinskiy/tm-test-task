AWSTemplateFormatVersion: 2010-09-09
# Import of parameters that are defined in root template
Parameters:
  TaskVpcCidr:
    Type: String

  AvailabilityZoneA:
    Type: String

  AvailabilityZoneB:
    Type: String

  PublicSubnetCidrA:
    Type: String

  PublicSubnetCidrB:
    Type: String

  PrivateSubnetCidrA:
    Type: String

  PrivateSubnetCidrB:
    Type: String

  AllDestinationsCidr:
    Type: String

Resources:
  # VPC creation
  TaskVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref TaskVpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: TaskVPC

  # Two public subnets which will have IGW route, NAT gateway, and will host ALB
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      CidrBlock: !Ref PublicSubnetCidrA
      MapPublicIpOnLaunch: true
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PublicSubnetA

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      CidrBlock: !Ref PublicSubnetCidrB
      MapPublicIpOnLaunch: true
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PublicSubnetB

  # Two private subnets which will run ECS tasks, and will have internet access through NAT gateway
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      CidrBlock: !Ref PrivateSubnetCidrA
      MapPublicIpOnLaunch: false
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PrivateSubnetA

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      CidrBlock: !Ref PrivateSubnetCidrB
      MapPublicIpOnLaunch: false
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PrivateSubnetB

  # Route table that will be used for public routes
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Creation and adding IGW to PublicRT
  TaskIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: TaskIGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref TaskIGW
      VpcId: !Ref TaskVPC

  # Attaching public subnets to public rt
  PublicSubnetAAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB

  InternetGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref TaskIGW
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref AllDestinationsCidr

  # Creation of NAT (in public subnet) through which private subnets will access internet
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: TaskNAT

  NATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NATGatewayEIP

  # Creation of private rt for private subnets to redirect all outbound traffic to NAT
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TaskVPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateSubnetAAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetA

  PrivateSubnetBAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetB

  NatGatewayRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NATGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: !Ref AllDestinationsCidr

# Usage of outputs and "Export functions" to export created resources values to other templates
Outputs:
  VPC:
    Description: Reference to VPC
    Value: !Ref TaskVPC
    Export:
      Name: TaskVPC

  SubnetA:
    Description: Reference to first private subnet
    Value: !Ref PrivateSubnetA
    Export:
      Name: TaskSubnetA

  SubnetB:
    Description: Reference to second private subnet
    Value: !Ref PrivateSubnetB
    Export:
      Name: TaskSubnetB

  PublicSubnetA:
    Description: Reference to first public subnet
    Value: !Ref PublicSubnetA
    Export:
      Name: PublicSubnetA

  PublicSubnetB:
    Description: Reference to second public subnet
    Value: !Ref PublicSubnetB
    Export:
      Name: PublicSubnetB